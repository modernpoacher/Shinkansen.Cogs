"use strict";var _react=_interopRequireDefault(require("react"));var _reactTestRenderer=_interopRequireDefault(require("react-test-renderer"));var _enzyme=_interopRequireWildcard(require("enzyme"));var _enzymeAdapterReact=_interopRequireDefault(require("enzyme-adapter-react-16"));var _classnames=_interopRequireDefault(require("classnames"));var _checkbox=_interopRequireDefault(require("../../../components/label/checkbox"));var _checkbox2=_interopRequireDefault(require("../../../components/input/checkbox"));var _=require("../..");var _checkbox3=_interopRequireDefault(require("../../checkbox"));function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};if(obj!=null){var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_enzyme.default.configure({adapter:new _enzymeAdapterReact.default()});jest.mock('classnames',function(){return jest.fn(function(){return'MOCK CLASSNAME';});});jest.mock("../../../components/label/checkbox");jest.mock("../../../components/input/checkbox");describe('shinkansen-cogs/cogs/checkbox',function(){describe('<Cog />',function(){describe('With required props',function(){var component=_react.default.createElement(_checkbox3.default,{name:"MOCK NAME"});it('renders',function(){expect(_reactTestRenderer.default.create(component).toJSON()).toMatchSnapshot();});describe('Prototype',function(){describe('`getClassName`',function(){it('is defined',function(){expect(_checkbox3.default.prototype.getClassName).toBeDefined();});});describe('`renderLabel`',function(){it('is defined',function(){expect(_checkbox3.default.prototype.renderLabel).toBeDefined();});});describe('`renderInput`',function(){it('is defined',function(){expect(_checkbox3.default.prototype.renderInput).toBeDefined();});});});describe('Instance',function(){var instance;beforeEach(function(){var wrapper=(0,_enzyme.shallow)(component);instance=wrapper.instance();});describe('`getInput`',function(){it('is defined',function(){expect(instance.getInput).toBeDefined();});});describe('`getLabel`',function(){it('is defined',function(){expect(instance.getLabel).toBeDefined();});});describe('`setInput`',function(){it('is defined',function(){expect(instance.setInput).toBeDefined();});});describe('`setLabel`',function(){it('is defined',function(){expect(instance.setLabel).toBeDefined();});});});});describe('With additional props',function(){it('renders',function(){var component=_react.default.createElement(_checkbox3.default,{name:"MOCK NAME",id:"MOCK ID",label:"MOCK LABEL",tabIndex:1,accessKey:"MOCK ACCESS KEY",required:true,disabled:true,readOnly:true,placeholder:"MOCK PLACEHOLDER",onClick:jest.fn(),onChange:jest.fn()});expect(_reactTestRenderer.default.create(component).toJSON()).toMatchSnapshot();});});describe('`getClassName()`',function(){var returnValue;beforeEach(function(){jest.spyOn(_.CheckCog.prototype,'getClassName').mockReturnValue('MOCK GETCLASSNAME');var component=_react.default.createElement(_checkbox3.default,{name:"MOCK NAME"});var instance=(0,_enzyme.shallow)(component).instance();returnValue=instance.getClassName();});it('does not invoke `classnames`',function(){expect(_classnames.default).toBeCalledWith('MOCK GETCLASSNAME','checkbox');});it('returns the classname',function(){expect(returnValue).toBe('MOCK CLASSNAME');});});describe('`shouldComponentUpdate()`',function(){var MOCK_ONCLICK=jest.fn();var MOCK_ONCHANGE=jest.fn();var component=_react.default.createElement(_checkbox3.default,{name:"MOCK NAME",id:"MOCK ID",label:"MOCK LABEL",tabIndex:1,accessKey:"MOCK ACCESS KEY",required:true,disabled:true,readOnly:true,placeholder:"MOCK PLACEHOLDER",onClick:MOCK_ONCLICK,onChange:MOCK_ONCHANGE});var instance;beforeEach(function(){var wrapper=(0,_enzyme.shallow)(component);instance=wrapper.instance();});describe('`props` have changed',function(){it('returns true',function(){expect(instance.shouldComponentUpdate({name:'MOCK CHANGE NAME',id:'MOCK CHANGE ID',label:'MOCK CHANGE LABEL',tabIndex:0,accessKey:'MOCK CHANGE ACCESS KEY',required:false,disabled:false,readOnly:false,placeholder:'MOCK CHANGE PLACEHOLDER',onClick:jest.fn(),onChange:jest.fn()})).toBe(true);});});describe('`props` have not changed',function(){it('returns false',function(){expect(instance.shouldComponentUpdate({name:'MOCK NAME',id:'MOCK ID',label:'MOCK LABEL',tabIndex:1,accessKey:'MOCK ACCESS KEY',required:true,disabled:true,readOnly:true,placeholder:'MOCK PLACEHOLDER',onClick:MOCK_ONCLICK,onChange:MOCK_ONCHANGE})).toBe(false);});});});describe('`renderLabel()`',function(){var MOCK_ONCLICK=jest.fn();var MOCK_ONCHANGE=jest.fn();var component=_react.default.createElement(_checkbox3.default,{name:"MOCK NAME",id:"MOCK ID",label:"MOCK LABEL",tabIndex:1,accessKey:"MOCK ACCESS KEY",required:true,disabled:true,readOnly:true,placeholder:"MOCK PLACEHOLDER",onClick:MOCK_ONCLICK,onChange:MOCK_ONCHANGE});var instance;var getIdSpy;beforeEach(function(){jest.clearAllMocks();var wrapper=(0,_enzyme.mount)(component);instance=wrapper.instance();getIdSpy=jest.spyOn(_checkbox3.default.prototype,'getId').mockReturnValue('MOCK ID');instance.renderLabel();});it('invokes `getId`',function(){expect(getIdSpy).toBeCalled();});it('renders `<Label />`',function(){expect(_checkbox.default).toBeCalledWith({id:'MOCK ID',label:'MOCK LABEL',disabled:true,required:true,readOnly:true},{});});});describe('`renderInput()`',function(){var MOCK_ONCLICK=jest.fn();var MOCK_ONCHANGE=jest.fn();var component=_react.default.createElement(_checkbox3.default,{name:"MOCK NAME",id:"MOCK ID",label:"MOCK LABEL",tabIndex:1,accessKey:"MOCK ACCESS KEY",required:true,disabled:true,readOnly:true,placeholder:"MOCK PLACEHOLDER",onClick:MOCK_ONCLICK,onChange:MOCK_ONCHANGE});var instance;var getIdSpy;beforeEach(function(){jest.clearAllMocks();var wrapper=(0,_enzyme.mount)(component);instance=wrapper.instance();getIdSpy=jest.spyOn(_checkbox3.default.prototype,'getId');instance.renderInput();});it('invokes `getId`',function(){expect(getIdSpy).toBeCalled();});it('renders `<Input />`',function(){expect(_checkbox2.default).toBeCalledWith({name:'MOCK NAME',id:'MOCK ID',tabIndex:1,accessKey:'MOCK ACCESS KEY',required:true,disabled:true,readOnly:true,placeholder:'MOCK PLACEHOLDER',onClick:MOCK_ONCLICK,onChange:MOCK_ONCHANGE},{});});});});});