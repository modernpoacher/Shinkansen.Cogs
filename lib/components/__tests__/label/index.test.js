"use strict";var _react=_interopRequireDefault(require("react"));var _reactTestRenderer=_interopRequireDefault(require("react-test-renderer"));var _enzyme=_interopRequireWildcard(require("enzyme"));var _enzymeAdapterReact=_interopRequireDefault(require("enzyme-adapter-react-16"));var _label=_interopRequireDefault(require("../../label"));function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};if(obj!=null){var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_enzyme.default.configure({adapter:new _enzymeAdapterReact.default()});jest.mock("../../common/text-content",function(){return function(){return'MOCK TEXT CONTENT';};});jest.mock("../../common/required",function(){return function(){return'MOCK REQUIRED';};});jest.mock("../../common/disabled",function(){return function(){return'MOCK DISABLED';};});jest.mock("../../common/readonly",function(){return function(){return'MOCK READONLY';};});describe('shinkansen-cogs/components/input',function(){describe('<Label />',function(){describe('With required props',function(){var component=_react.default.createElement(_label.default,{id:"MOCK ID"});it('renders',function(){expect(_reactTestRenderer.default.create(component).toJSON()).toMatchSnapshot();});describe('`textContent`',function(){it('is defined',function(){expect(_label.default.prototype.textContent).toBeDefined();});});describe('`getClassName`',function(){it('is defined',function(){expect(_label.default.prototype.getClassName).toBeDefined();});});describe('`shouldComponentUpdate`',function(){it('is defined',function(){expect(_label.default.prototype.shouldComponentUpdate).toBeDefined();});});describe('`renderTextContent`',function(){it('is defined',function(){expect(_label.default.prototype.renderTextContent).toBeDefined();});});describe('`renderIsRequired`',function(){it('is defined',function(){expect(_label.default.prototype.renderIsRequired).toBeDefined();});});describe('`renderIsDisabled`',function(){it('is defined',function(){expect(_label.default.prototype.renderIsDisabled).toBeDefined();});});describe('`renderIsReadOnly`',function(){it('is defined',function(){expect(_label.default.prototype.renderIsReadOnly).toBeDefined();});});});describe('With additional props',function(){it('renders',function(){var component=_react.default.createElement(_label.default,{id:"MOCK ID",label:"MOCK LABEL",required:true,disabled:true,readOnly:true,onChange:jest.fn()});expect(_reactTestRenderer.default.create(component).toJSON()).toMatchSnapshot();});});describe('`textContent()`',function(){it('returns the `label` prop',function(){var component=_react.default.createElement(_label.default,{id:"MOCK ID",label:"MOCK LABEL"});var instance=(0,_enzyme.shallow)(component).instance();expect(instance.textContent()).toBe('MOCK LABEL');});});describe('`getClassName()`',function(){it('returns the classname',function(){var component=_react.default.createElement(_label.default,{id:"MOCK ID"});var instance=(0,_enzyme.shallow)(component).instance();expect(instance.getClassName()).toBe('label');});});describe('`shouldComponentUpdate()`',function(){var component=_react.default.createElement(_label.default,{id:"MOCK ID",label:"MOCK LABEL",required:true,disabled:true,readOnly:true});var instance;beforeEach(function(){var wrapper=(0,_enzyme.shallow)(component);instance=wrapper.instance();});describe('`props` have changed',function(){it('returns true',function(){expect(instance.shouldComponentUpdate({id:'MOCK CHANGE ID',label:'MOCK CHANGE LABEL',required:false,disabled:false,readOnly:false})).toBe(true);});});describe('`props` have not changed',function(){it('returns false',function(){expect(instance.shouldComponentUpdate({id:'MOCK ID',label:'MOCK LABEL',required:true,disabled:true,readOnly:true})).toBe(false);});});});});});