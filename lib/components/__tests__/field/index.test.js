"use strict";function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}var _react=_interopRequireDefault(require("react"));var _reactTestRenderer=_interopRequireDefault(require("react-test-renderer"));var _enzyme=_interopRequireWildcard(require("enzyme"));var _enzymeAdapterReact=_interopRequireDefault(require("enzyme-adapter-react-16"));var _field=_interopRequireWildcard(require("../../field"));function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||_typeof(obj)!=="object"&&typeof obj!=="function"){return{"default":obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj["default"]=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj};}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}_enzyme["default"].configure({adapter:new _enzymeAdapterReact["default"]()});describe('shinkansen-cogs/components/field',function(){describe('<Field />',function(){describe('With required props',function(){var component=_react["default"].createElement(_field["default"],{name:"MOCK NAME"});it('renders',function(){return expect(_reactTestRenderer["default"].create(component).toJSON()).toMatchSnapshot();});describe('Prototype',function(){describe('`getClassName`',function(){it('is defined',function(){return expect(_field["default"].prototype.getClassName).toBeDefined();});});describe('`shouldComponentUpdate`',function(){it('is defined',function(){return expect(_field["default"].prototype.shouldComponentUpdate).toBeDefined();});});});describe('Instance',function(){var instance;beforeEach(function(){var wrapper=(0,_enzyme.shallow)(component);instance=wrapper.instance();});describe('`getDOMNode`',function(){it('is defined',function(){return expect(instance.getDOMNode).toBeDefined();});});describe('`setDOMNode`',function(){it('is defined',function(){return expect(instance.setDOMNode).toBeDefined();});});});});describe('With additional props',function(){it('renders',function(){var component=_react["default"].createElement(_field["default"],{name:"MOCK NAME",id:"MOCK ID",title:"MOCK TITLE",tabIndex:1,accessKey:"MOCK ACCESS KEY",required:true,disabled:true,readOnly:true,placeholder:"MOCK PLACEHOLDER"});return expect(_reactTestRenderer["default"].create(component).toJSON()).toMatchSnapshot();});});describe('`getDOMNode()`',function(){it('returns the `domNode` field of the instance',function(){var component=_react["default"].createElement(_field["default"],{name:"MOCK NAME"});var instance=(0,_enzyme.shallow)(component).instance();var mockDOMNode={};instance.domNode=mockDOMNode;return expect(instance.getDOMNode()).toBe(mockDOMNode);});});describe('`setDOMNode()`',function(){describe('With a parameter',function(){it('sets the parameter to the instance as the field `domNode`',function(){var component=_react["default"].createElement(_field["default"],{name:"MOCK NAME"});var instance=(0,_enzyme.shallow)(component).instance();var mockDOMNode={};instance.setDOMNode(mockDOMNode);return expect(instance.domNode).toBe(mockDOMNode);});});describe('With any parameters',function(){it('deletes the field `domNode` from the instance',function(){var component=_react["default"].createElement(_field["default"],{name:"MOCK NAME"});var instance=(0,_enzyme.shallow)(component).instance();instance.setDOMNode();return expect(instance.domNode).toBeUndefined();});});});describe('`getClassName()`',function(){it('returns the classname',function(){var component=_react["default"].createElement(_field["default"],{name:"MOCK NAME"});var instance=(0,_enzyme.shallow)(component).instance();return expect(instance.getClassName()).toBe('input');});});describe('`shouldComponentUpdate()`',function(){var MOCK_ONCHANGE=jest.fn();var component=_react["default"].createElement(_field["default"],{name:"MOCK NAME",id:"MOCK ID",title:"MOCK TITLE",tabIndex:1,accessKey:"MOCK ACCESS KEY",required:true,disabled:true,readOnly:true,placeholder:"MOCK PLACEHOLDER",onChange:MOCK_ONCHANGE});var instance;beforeEach(function(){instance=(0,_enzyme.shallow)(component).instance();});describe('`props` have changed',function(){it('returns true',function(){return expect(instance.shouldComponentUpdate({name:'MOCK CHANGE NAME',id:'MOCK CHANGE ID',title:'MOCK CHANGE TITLE',tabIndex:0,accessKey:'MOCK CHANGE ACCESS KEY',required:false,disabled:false,readOnly:false,placeholder:'MOCK CHANGE PLACEHOLDER',onChange:jest.fn()})).toBe(true);});});describe('`props` have not changed',function(){it('returns false',function(){return expect(instance.shouldComponentUpdate({name:'MOCK NAME',id:'MOCK ID',title:'MOCK TITLE',tabIndex:1,accessKey:'MOCK ACCESS KEY',required:true,disabled:true,readOnly:true,placeholder:'MOCK PLACEHOLDER',onChange:MOCK_ONCHANGE})).toBe(false);});});});});describe('<ValueField />',function(){describe('With required props',function(){var component=_react["default"].createElement(_field.ValueField,{name:"MOCK NAME"});it('renders',function(){return expect(_reactTestRenderer["default"].create(component).toJSON()).toMatchSnapshot();});describe('Prototype',function(){describe('`getValue`',function(){it('is defined',function(){return expect(_field.ValueField.prototype.getValue).toBeDefined();});});describe('`setValue`',function(){it('is defined',function(){return expect(_field.ValueField.prototype.setValue).toBeDefined();});});describe('`shouldComponentUpdate`',function(){it('is defined',function(){return expect(_field.ValueField.prototype.shouldComponentUpdate).toBeDefined();});});});describe('Instance',function(){var instance;beforeEach(function(){instance=(0,_enzyme.shallow)(component).instance();});describe('Extends `<Field />`',function(){it('is defined',function(){return expect(instance).toBeInstanceOf(_field["default"]);});});describe('`handleChange`',function(){it('is defined',function(){return expect(instance.handleChange).toBeDefined();});});});});describe('With additional props',function(){it('renders',function(){var component=_react["default"].createElement(_field.ValueField,{name:"MOCK NAME",id:"MOCK ID",title:"MOCK TITLE",tabIndex:1,accessKey:"MOCK ACCESS KEY",required:true,disabled:true,readOnly:true,value:"MOCK VALUE",placeholder:"MOCK PLACEHOLDER"});return expect(_reactTestRenderer["default"].create(component).toJSON()).toMatchSnapshot();});});describe('`getValue()`',function(){it('gets the domNode `value` attribute',function(){var component=_react["default"].createElement(_field.ValueField,{name:"MOCK NAME"});var mockDOMNode={value:'MOCK GET VALUE'};var instance=(0,_enzyme.shallow)(component).instance();jest.spyOn(instance,'getDOMNode').mockReturnValue(mockDOMNode);var value=instance.getValue();return expect(value).toBe('MOCK GET VALUE');});});describe('`setValue()`',function(){it('sets the domNode `value` attribute',function(){var component=_react["default"].createElement(_field.ValueField,{name:"MOCK NAME"});var mockDOMNode={};var instance=(0,_enzyme.shallow)(component).instance();jest.spyOn(instance,'getDOMNode').mockReturnValue(mockDOMNode);instance.setValue('MOCK SET VALUE');return expect(mockDOMNode.value).toBe('MOCK SET VALUE');});});describe('`shouldComponentUpdate()`',function(){var component=_react["default"].createElement(_field.ValueField,{name:"MOCK NAME",id:"MOCK ID",title:"MOCK TITLE",tabIndex:1,accessKey:"MOCK ACCESS KEY",required:true,disabled:true,readOnly:true,value:"MOCK VALUE",placeholder:"MOCK PLACEHOLDER"});var instance;beforeEach(function(){instance=(0,_enzyme.shallow)(component).instance();});describe('`props` have changed',function(){it('returns true',function(){return expect(instance.shouldComponentUpdate(_objectSpread(_objectSpread({},instance.props),{},{value:'MOCK CHANGE VALUE'}))).toBe(true);});});describe('`props` have not changed',function(){it('returns false',function(){return expect(instance.shouldComponentUpdate(_objectSpread(_objectSpread({},instance.props),{},{value:'MOCK VALUE'}))).toBe(false);});});});describe('`handleChange()`',function(){it('invokes the `onChange` prop',function(){var MOCK_ONCHANGE=jest.fn();var component=_react["default"].createElement(_field.ValueField,{name:"MOCK NAME",onChange:MOCK_ONCHANGE});var instance=(0,_enzyme.shallow)(component).instance();instance.handleChange({target:{value:'MOCK VALUE'}});return expect(MOCK_ONCHANGE).toBeCalledWith('MOCK VALUE');});});});describe('<CheckField />',function(){describe('With required props',function(){var component=_react["default"].createElement(_field.CheckField,{name:"MOCK NAME"});it('renders',function(){return expect(_reactTestRenderer["default"].create(component).toJSON()).toMatchSnapshot();});describe('Prototype',function(){describe('`getValue`',function(){it('is defined',function(){return expect(_field.CheckField.prototype.getValue).toBeDefined();});});describe('`setValue`',function(){it('is defined',function(){return expect(_field.CheckField.prototype.setValue).toBeDefined();});});describe('`shouldComponentUpdate`',function(){it('is defined',function(){return expect(_field.CheckField.prototype.shouldComponentUpdate).toBeDefined();});});});describe('Instance',function(){var instance;beforeEach(function(){instance=(0,_enzyme.shallow)(component).instance();});describe('Extends `<Field />`',function(){it('is defined',function(){return expect(instance).toBeInstanceOf(_field["default"]);});});describe('`handleClick`',function(){it('is defined',function(){return expect(instance.handleClick).toBeDefined();});});describe('`handleChange`',function(){it('is defined',function(){return expect(instance.handleChange).toBeDefined();});});});});describe('With additional props',function(){it('renders',function(){var component=_react["default"].createElement(_field.CheckField,{name:"MOCK NAME",id:"MOCK ID",required:true,disabled:true,readOnly:true,checked:true,placeholder:"MOCK PLACEHOLDER"});return expect(_reactTestRenderer["default"].create(component).toJSON()).toMatchSnapshot();});});describe('`getValue()`',function(){it('gets the domNode `checked` attribute',function(){var component=_react["default"].createElement(_field.CheckField,{name:"MOCK NAME"});var mockDOMNode={checked:'MOCK GET VALUE'};var instance=(0,_enzyme.shallow)(component).instance();jest.spyOn(instance,'getDOMNode').mockReturnValue(mockDOMNode);var checked=instance.getValue();return expect(checked).toBe('MOCK GET VALUE');});});describe('`setValue()`',function(){it('sets the domNode `checked` attribute',function(){var component=_react["default"].createElement(_field.CheckField,{name:"MOCK NAME"});var mockDOMNode={};var instance=(0,_enzyme.shallow)(component).instance();jest.spyOn(instance,'getDOMNode').mockReturnValue(mockDOMNode);instance.setValue('MOCK SET VALUE');return expect(mockDOMNode.checked).toBe('MOCK SET VALUE');});});describe('`shouldComponentUpdate()`',function(){var MOCK_ONCHANGE=jest.fn();var MOCK_ONCLICK=jest.fn();var component=_react["default"].createElement(_field.CheckField,{name:"MOCK NAME",id:"MOCK ID",title:"MOCK TITLE",tabIndex:1,accessKey:"MOCK ACCESS KEY",required:true,disabled:true,readOnly:true,checked:true,placeholder:"MOCK PLACEHOLDER",onChange:MOCK_ONCHANGE,onClick:MOCK_ONCLICK});var instance;beforeEach(function(){instance=(0,_enzyme.shallow)(component).instance();});describe('`props` have changed',function(){it('returns true',function(){return expect(instance.shouldComponentUpdate(_objectSpread(_objectSpread({},instance.props),{},{checked:false,onClick:jest.fn()}))).toBe(true);});});describe('`props` have not changed',function(){it('returns false',function(){return expect(instance.shouldComponentUpdate(_objectSpread(_objectSpread({},instance.props),{},{checked:true,onClick:MOCK_ONCLICK}))).toBe(false);});});});describe('`handleClick()`',function(){it('invokes the `onClick` prop',function(){var MOCK_ONCLICK=jest.fn();var component=_react["default"].createElement(_field.CheckField,{name:"MOCK NAME",onClick:MOCK_ONCLICK});var instance=(0,_enzyme.shallow)(component).instance();instance.handleClick({target:{checked:'MOCK CHECKED'}});return expect(MOCK_ONCLICK).toBeCalledWith('MOCK CHECKED');});});describe('`handleChange()`',function(){it('invokes the `onChange` prop',function(){var MOCK_ONCHANGE=jest.fn();var component=_react["default"].createElement(_field.CheckField,{name:"MOCK NAME",onChange:MOCK_ONCHANGE});var instance=(0,_enzyme.shallow)(component).instance();instance.handleChange({target:{checked:'MOCK CHECKED'}});return expect(MOCK_ONCHANGE).toBeCalledWith('MOCK CHECKED');});});});});